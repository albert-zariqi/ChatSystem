// <auto-generated />
using System;
using ChatSystem.Chat.API.Layers.Application.Infrastructure.Common.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatSystem.Chat.API.Layers.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    partial class ChatDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CustomerSupport.Chat.API.Layers.Domain.Entities.Agent", b =>
            {
                b.Property<Guid>("Id")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("CreatedBy")
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<DateTimeOffset>("CreatedOn")
                    .HasColumnType("datetimeoffset");

                b.Property<string>("FirstName")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<string>("LastModifiedBy")
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<DateTimeOffset?>("LastModifiedOn")
                    .HasColumnType("datetimeoffset");

                b.Property<string>("LastName")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<Guid>("SeniorityId")
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("TeamId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Username")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.HasKey("Id");

                b.HasIndex("SeniorityId");

                b.HasIndex("TeamId");

                b.HasIndex("Username")
                    .IsUnique();

                b.ToTable("Agents");
            });

            modelBuilder.Entity("CustomerSupport.Chat.API.Layers.Domain.Entities.ChatSession", b =>
            {
                b.Property<Guid>("Id")
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid?>("AgentId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("CreatedBy")
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<DateTimeOffset>("CreatedOn")
                    .HasColumnType("datetimeoffset");

                b.Property<string>("LastModifiedBy")
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<DateTimeOffset?>("LastModifiedOn")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid>("SessionId")
                    .HasColumnType("uniqueidentifier");

                b.Property<int>("Status")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("AgentId");

                b.ToTable("ChatSessions");
            });

            modelBuilder.Entity("CustomerSupport.Chat.API.Layers.Domain.Entities.Seniority", b =>
            {
                b.Property<Guid>("Id")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("CreatedBy")
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<DateTimeOffset>("CreatedOn")
                    .HasColumnType("datetimeoffset");

                b.Property<decimal>("Factor")
                    .HasColumnType("decimal(18,2)");

                b.Property<string>("LastModifiedBy")
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<DateTimeOffset?>("LastModifiedOn")
                    .HasColumnType("datetimeoffset");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnType("nvarchar(200)");

                b.HasKey("Id");

                b.ToTable("Seniorities");
            });

            modelBuilder.Entity("CustomerSupport.Chat.API.Layers.Domain.Entities.Shift", b =>
            {
                b.Property<Guid>("Id")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("CreatedBy")
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<DateTimeOffset>("CreatedOn")
                    .HasColumnType("datetimeoffset");

                b.Property<int>("EndHour")
                    .HasColumnType("int");

                b.Property<int>("EndMinute")
                    .HasColumnType("int");

                b.Property<string>("LastModifiedBy")
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<DateTimeOffset?>("LastModifiedOn")
                    .HasColumnType("datetimeoffset");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnType("nvarchar(200)");

                b.Property<int>("StartHour")
                    .HasColumnType("int");

                b.Property<int>("StartMinute")
                    .HasColumnType("int");

                b.Property<string>("TimezoneId")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.HasKey("Id");

                b.ToTable("Shifts");
            });

            modelBuilder.Entity("CustomerSupport.Chat.API.Layers.Domain.Entities.Team", b =>
            {
                b.Property<Guid>("Id")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("CreatedBy")
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<DateTimeOffset>("CreatedOn")
                    .HasColumnType("datetimeoffset");

                b.Property<bool>("IsMainTeam")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bit")
                    .HasDefaultValue(true);

                b.Property<string>("LastModifiedBy")
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<DateTimeOffset?>("LastModifiedOn")
                    .HasColumnType("datetimeoffset");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnType("nvarchar(200)");

                b.Property<Guid>("ShiftId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("ShiftId");

                b.ToTable("Teams");
            });

            modelBuilder.Entity("CustomerSupport.Chat.API.Layers.Domain.Entities.Agent", b =>
            {
                b.HasOne("CustomerSupport.Chat.API.Layers.Domain.Entities.Seniority", "Seniority")
                    .WithMany()
                    .HasForeignKey("SeniorityId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("CustomerSupport.Chat.API.Layers.Domain.Entities.Team", "Team")
                    .WithMany()
                    .HasForeignKey("TeamId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Seniority");

                b.Navigation("Team");
            });

            modelBuilder.Entity("CustomerSupport.Chat.API.Layers.Domain.Entities.ChatSession", b =>
            {
                b.HasOne("CustomerSupport.Chat.API.Layers.Domain.Entities.Agent", "Agent")
                    .WithMany("ChatSessions")
                    .HasForeignKey("AgentId");

                b.Navigation("Agent");
            });

            modelBuilder.Entity("CustomerSupport.Chat.API.Layers.Domain.Entities.Team", b =>
            {
                b.HasOne("CustomerSupport.Chat.API.Layers.Domain.Entities.Shift", "Shift")
                    .WithMany()
                    .HasForeignKey("ShiftId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Shift");
            });

            modelBuilder.Entity("CustomerSupport.Chat.API.Layers.Domain.Entities.Agent", b =>
            {
                b.Navigation("ChatSessions");
            });
#pragma warning restore 612, 618
        }
    }
}
